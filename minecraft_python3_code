#basic code

from ursina import *
from ursina.prefabs.first_person_controller import FirstPersonController

app = Ursina()

grass_texture = load_texture("assets/grass.png")
soil_texture = load_texture("assets/soil.png")
stone_texture = load_texture("assets/stone.png")
wood_texture = load_texture("assets/wood.png")
vansh_texture = load_texture("assets/vansh.jpg")

sky_texture = load_texture("assets/sky.png")
ironblock_texture = load_texture("assets/ironblock.png")
panza_texture = load_texture("assets/panza.png")
leaves_texture = load_texture("assets/leaves.png")

current_texture = grass_texture

def update():
    global current_texture
    if held_keys['1']: current_texture = grass_texture
    if held_keys['2']: current_texture = soil_texture
    if held_keys['3']: current_texture = stone_texture
    if held_keys['4']: current_texture = wood_texture
    if held_keys['5']: current_texture = vansh_texture
    if held_keys['6']: current_texture = ironblock_texture
    if held_keys['7']: current_texture = panza_texture
    if held_keys['8']: current_texture = leaves_texture



class Sky(Entity):
    def __init__(self):
        super().__init__(
            parent = scene,
            model = 'sphere',
            scale = 150,
            texture = sky_texture,
            double_sided = True
        )

class Hand(Entity):
    def __init__(self):
        super().__init__(
            parent = camera.ui,
            model = 'cube',
            scale = (0.2,0.3),
            color = color.white,
            rotation=Vec3(150, -10, 0),
            position=Vec2(0.4, -0.4)

        )

    def active(self):
        self.position = Vec2(0.1, -0.5)
        self.rotation = Vec3(90, 10 ,0)

    def passive(self):
        self.position = Vec2(0.1, -0.5),
        self.rotation = Vec3(90, -10, 0)

class Voxel(Button):
    def __init__(self, position=(0, 0, 0),texture = grass_texture):
        super().__init__(
            parent = scene,
            model='cube',
            color=color.white,
            highlight_color = color.lime,
            texture=texture,
            position=position,
            origin_y=0.5

        )

    def input(self, key):
        if self.hovered:
            if key == "left mouse down":
                voxel = Voxel(position= self.position + mouse.normal , texture=current_texture )
            if key == "right mouse down":
                destroy(self)

for z in range(25):
    for x in range(25):
        voxel=Voxel((x,0,z))

player = FirstPersonController()
sky = Sky()



app.run()
